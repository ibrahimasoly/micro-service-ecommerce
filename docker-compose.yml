services:
  mysqldb:
    container_name: mysqldb
    image: mysql:latest
    volumes:
      - dbdata:/var/lib.mysql
    ports:
      - 3306:3306
    networks:
      - microservices-net
    environment:
      - MYSQL_ROOT_PASSWORD=ibe
      - MYSQL_USER=ibe
      - MYSQL_PASSWORD=ibe
      - MYSQL_DATABASE=product_db
    healthcheck:
      test: "exit 0"

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    ports:
      - 8089:80
    networks:
      - microservices-net
    environment:
      - PMA_HOST=mysqldb
      - PMA_PORT=3306
      - PMA_ARBITRARY=1
    depends_on:
      mysqldb:
        condition: service_healthy


  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - 27017:27017
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=ibecoul90
      - MONGO_INITDB_ROOT_PASSWORD=ibecoul90

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8088:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=ibecoul90
      - ME_CONFIG_MONGODB_ADMINPASSWORD=ibecoul90
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=ibecoul90

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net

  ms_kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net
  
  mail-dev:
      container_name: mail-dev
      image: maildev/maildev
      ports:
        - 1080:1080
        - 1025:1025

networks:
  microservices-net:
    driver: bridge

volumes:
  dbdata:
  mongo: